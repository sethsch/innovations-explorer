{"version":3,"sources":["../src/Vertex.js"],"names":[],"mappings":"AAAA;;;;;;;;;AAEA;;AACA;;AACA;;;;;;;;IAEa,M,WAAA,M;;;AAET,oBAAa,KAAb,EACA;AAAA;;AAAA,8FACU,KADV;;AAEI,cAAK,WAAL,CAAiB,KAAjB;AACA,YAAI,MAAK,QAAL,CAAc,MAAd,KAAyB,CAA7B,EACA;AACI,kBAAK,QAAL,CAAc,IAAd,CAAmB,CAAnB;AACH;AACD,YAAI,MAAK,QAAL,CAAc,MAAd,KAAyB,CAA7B,EACA;AAAA;;AACI,0BAAO,IAAP;AACH;AAVL;AAWC;;;;;;;;;iCAKS,O,EACV;AACI,gBAAI,OAAO,QAAQ,OAAR,CAAgB,IAAhB,CAAX;AACA,gBAAI,SAAS,IAAb,EACA;AACI,uBAAO,IAAP;AACH;AACD,gBAAI,OAAO,KAAK,IAAL,CAAU,IAArB;gBAA2B,OAAO,KAAK,IAAL,CAAU,IAA5C;AACA,gBAAI,IAAI,KAAK,QAAL,CAAc,IAAd,CAAR;AACA,gBAAI,IAAI,KAAK,QAAL,CAAc,IAAd,CAAR;AACA,gBAAI,QAAQ,EAAE,SAAF,CAAY,CAAZ,CAAZ;AACA,gBAAI,6BAAJ,EACA;AACI,uBAAO,IAAP;AACH;AACD,gBAAI,KAAK,GAAL,CAAS,QAAQ,KAAK,EAAtB,yBAAJ,EACA;AACI,uBAAO,KAAP;AACH;AACD,mBAAQ,EAAE,KAAF,CAAQ,CAAR,EAAW,GAAX,CAAe,QAAQ,KAAR,CAAc,MAA7B,IAAuC,CAA/C;AACH;;;;;;iCAGS,O,EACV;AACI,gBAAI,SAAS,KAAK,QAAL,CAAc,OAAd,CAAb;AACA,mBAAQ,WAAW,IAAZ,GAAoB,IAApB,GAA2B,CAAC,MAAnC;AACH;;;6BAEK,O,EACN;AACI,gBAAI,SAAS,KAAK,QAAL,CAAc,OAAd,CAAb;AACA,mBAAQ,WAAW,IAAZ,GAAoB,IAApB,GAA4B,SAAS,QAAT,GAAoB,QAAvD;AACH;;;;;;;;;AAKL,OAAO,OAAP,GAAiB,UAAS,MAAT,EACjB;AACI,QAAI,WAAW,OAAO,OAAP,GAAiB,OAAO,OAAP,EAAjB,GAAoC,MAAnD;AACA,QAAI,OAAO,EAAX;QAAe,IAAI,SAAS,MAA5B;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,CAApB,EAAuB,GAAvB,EACA;AACI,aAAK,IAAL,CAAU,IAAI,MAAJ,CAAW,SAAS,CAAT,CAAX,CAAV;AACH;AACD,WAAO,IAAP;AACH,CATD","file":"Vertex.js","sourcesContent":["\"use strict\";\r\n\r\nimport { Vector } from \"./Vector\";\r\nimport { PRECISION } from \"./PRECISION\";\r\nimport { Polygon } from \"./Polygon\";\r\n\r\nexport class Vertex extends Vector\r\n{\r\n    constructor (point)\r\n    {\r\n        super(point);\r\n        this.setElements(point);\r\n        if (this.elements.length === 2)\r\n        {\r\n            this.elements.push(0);\r\n        }\r\n        if (this.elements.length !== 3)\r\n        {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // Returns true iff the vertex's internal angle is 0 <= x < 180\r\n    // in the context of the given polygon object. Returns null if the\r\n    // vertex does not exist in the polygon.\r\n    isConvex (polygon)\r\n    {\r\n        var node = polygon.nodeFor(this);\r\n        if (node === null)\r\n        {\r\n            return null;\r\n        }\r\n        var prev = node.prev.data, next = node.next.data;\r\n        var A = next.subtract(this);\r\n        var B = prev.subtract(this);\r\n        var theta = A.angleFrom(B);\r\n        if (theta <= PRECISION)\r\n        {\r\n            return true;\r\n        }\r\n        if (Math.abs(theta - Math.PI) <= PRECISION)\r\n        {\r\n            return false;\r\n        }\r\n        return (A.cross(B).dot(polygon.plane.normal) > 0);\r\n    }\r\n\r\n    // Returns true iff the vertex's internal angle is 180 <= x < 360\r\n    isReflex (polygon)\r\n    {\r\n        var result = this.isConvex(polygon);\r\n        return (result === null) ? null : !result;\r\n    }\r\n\r\n    type (polygon)\r\n    {\r\n        var result = this.isConvex(polygon);\r\n        return (result === null) ? null : (result ? 'convex' : 'reflex');\r\n    }\r\n}\r\n\r\n\r\n// Method for converting a set of arrays/vectors/whatever to a set of Vertex objects\r\nVertex.convert = function(points)\r\n{\r\n    var pointSet = points.toArray ? points.toArray() : points;\r\n    var list = [], n = pointSet.length;\r\n    for (var i = 0; i < n; i++)\r\n    {\r\n        list.push(new Vertex(pointSet[i]));\r\n    }\r\n    return list;\r\n};\r\n"]}